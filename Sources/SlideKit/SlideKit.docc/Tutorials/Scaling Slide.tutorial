@Tutorial(time: 10) {
    @Intro(title: "Scaling Slide") {
        View on SlideKit is needed to be scaled to keep the ratio of layout and the slide.
        Otherwise, the slide layout changes when the window or display size is changed.
    }

    @Section(title: "Scale you slide") {
        @ContentAndMedia {
            Scale your slide by using features SlideKit provides.
        }

        @Steps {
            @Step {
                Add a new slide to *SlideKit Presentation* .

                @Code(name: "SlideScaleSlide.swift", file: "02-01-01-SlideScaleSlide.swift") { 
                    @Image(source: "02-01-01-preview.png", alt: "A presentation slide which has one header and one item. The header text is \"SlideScale on SlideKit\". The item text is \"View on SlideKit is needed to be scaled to keep the ratio of layout and the slide.\"")
                }
            }

            @Step {
                Add a non-scaled shape. 
                
                The layout is not stable, because the layout will change when the window size is changed.
                
                @Code(name: "SlideScaleSlide.swift", file: "02-01-02-SlideScaleSlide.swift") { 
                    @Image(source: "02-01-02-preview.png", alt: "A presentation slide which is added a new item and a new non-scaled shape to the previous slide.")
                }                
            }
            
            @Step { 
                Get an environment value `slideScale`. The value represents the ratio of the current window size and the configured slide size.
                
                @Code(name: "SlideScaleSlide.swift", file: "02-01-03-SlideScaleSlide.swift")
            }
            
            @Step { 
                Add a scaled shape.
                Don't forget to multiple `slideScale` and the value related to the layout, to scale it.
                
                @Code(name: "SlideScaleSlide.swift", file: "02-01-04-SlideScaleSlide.swift") { 
                    @Image(source: "02-01-04-preview.png", alt: "A presentation slide which is added a new item and a new scaled shape to the previous slide.")
                }                
            }
            
            @Step { 
                Use utility Views and ViewModifier provided by SlideKit instead of `slideScale`.
                
                `SlideXXX` and `slideXXX` internally multiple the `slideScale` and the provided value.
                
                @Code(name: "SlideScaleSlide.swift", file: "02-01-05-SlideScaleSlide.swift")
            }
            
            @Step {
                Open `SlideConfiguration.swift`.
                
                @Code(name: "SlideConfiguration.swift", file: "02-01-06-SlideConfiguration.swift")
            }
            
            @Step { 
                Finally, add the slide to `SlideIndexController` and run the app.
                
                @Code(name: "SlideConfiguration.swift", file: "02-01-07-SlideConfiguration.swift")
            }
        }
    }
}
